{"version":3,"sources":["two-birds-one-stone/tbos_constants.js","redux/actions/tbos/action_type.js","redux/actions/tbos/root.js","firebase/config.js","firebase/init_generators.js","redux/actions/tbos/task.js","redux/actions/tbos/index.js","global_constants.js","two-birds-one-stone/components/static_bird.js","two-birds-one-stone/components/bird.js","two-birds-one-stone/components/tbos_canvas.js","two-birds-one-stone/components/check_list_task.js","two-birds-one-stone/components/check_list_category.js","two-birds-one-stone/components/check_list.js","two-birds-one-stone/components/add_task.js","two-birds-one-stone/components/tbos_drag_canvas.js","two-birds-one-stone/components/breadcrumbs.js","two-birds-one-stone/index.js","cookie-trail/components/d3graph.js","cookie-trail/components/chart_trail.js","cookie-trail/components/jenny-attempt/Leaf.js","cookie-trail/components/chart_navigator.js","redux/actions/trail_viewer.js","cookie-trail/index.js","login/index.js","redux/reducers/reverse_hiearchy.js","redux/reducers/hiearchy.js","redux/reducers/active.js","redux/reducers/name.js","redux/reducers/tbos_root_path.js","redux/reducers/name_to_tasks.js","redux/reducers/task_aggregates.js","redux/reducers/tbos_cookie_trail.js","redux/reducers/checked_cookie_trails.js","redux/reducers/position.js","redux/reducers/last_action.js","redux/reducers/index.js","redux/reducers/base.js","utils.js","firebase/firestore_sync.js","firebase/store.js","registerServiceWorker.js","index.js"],"names":["displayTypes","createOne","createMany","checkList","dndItemTypes","BIRD","CANVAS","TRASH","CHECKMARK","ActionType","CREATE_TASK_COLLISION","DELETE_TASK","COMPLETE_TASK","CREATE_TASKS","CATEGORIZE_TASK","TBOS_POP_ROOT","TBOS_ADD_ROOT","TOGGLE_TRAIL","DRAG_TASK","TBOS_POP_ROOT_UNTIL","GET_TASKS","UNDO","popTaskTbosRoot","type","addTaskTbosRoot","taskId","popTaskTbosRootUntil","firebase","initializeApp","apiKey","authDomain","projectId","firestore","enablePersistence","catch","err","code","uiConfig","signInSuccessUrl","callbacks","uiShown","document","getElementById","style","display","signInOptions","provider","auth","EmailAuthProvider","PROVIDER_ID","signInMethod","EMAIL_LINK_SIGN_IN_METHOD","forceSameDevice","emailLinkSignIn","handleCodeInApp","db","onAuthStateChanged","user","cookie","uid","collection","doc","get","then","exists","set","mCV","cT","taskAggregates","deleted","moved","completed","total","u","hiearchy","tbosCookieTrail","active","name","uuidv1","require","deleteTaskAction","currentRoot","completeTaskAction","timestamp","arguments","length","undefined","Date","getTime","categorizeTaskAction","parent","child","createNewTaskAction","taskAKey","taskBKey","uuid","split","join","taskA","taskB","taskName","dragTaskAction","x","y","createNewTasksAction","tasks","index","Math","random","getTasks","redo","UndoActionCreators","undo","jumpToFuture","jumpToPast","TaskState","StaticBird","props","birdImgType","birdGroup","classType","isCat","count","birdStyles","backgroundImage","react_default","a","createElement","className","React","memo","currProps","prevProps","id","Bird","useMemo","floor","_useDrag","useDrag","item","collect","monitor","isDragging","end","dragProps","component","didDrop","droppedEvent","getDropResult","actionCreators","deltaX","deltaY","_useDrag2","Object","slicedToArray","drag","preview","_useDrop","useDrop","accept","isOver","drop","delta","getDifferenceFromInitialOffset","currentCanvas","clientWidth","clientHeight","_useDrop2","collectedProps","useEffect","getEmptyImage","captureDraggingState","birdPosition","top","left","position","hoveredClass","onClick","clickListener","ref","elementOrNode","options","static_bird","isTarget","TbosCanvas","_useDrop3","_useDrop4","checkmarkProps","checkmarkHook","_useDrop5","_useDrop6","trashProps","trashHook","birdClickListener","focusAddTask","tbosRootPath","_this","this","outerObject","getRootTasksAsArray","map","task","_props$position$task","keys","filter","tasksUnderCategory","bird","bind","getRootId","key","renderTasks","CheckListTask","checked","isChecked","onChange","toggleCheck","CheckListCategory","CheckList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","assign","state","setState","completeTasks","assertThisInitialized","deleteTasks","_this2","_React$createElement","defineProperty","prevTasks","currTasks","i","newChecked","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","return","checkIfArraySame","currentTimestamp","checkItem","processTasksState","shouldNotDisplayButtons","Component","AddTask","handleChange","handleKeyPress","event","target","e","createNewTask","preventDefault","actionCreatorcreateNewTask","onKeyPress","layerStyles","pointerEvents","zIndex","width","height","padding","margin","getItemStyles","currentOffset","transform","concat","WebkitTransform","userSelect","BirdStaticPreview","_ref","CustomDragLayer","_useDragLayer","useDragLayer","getItem","itemType","getItemType","getSourceClientOffset","renderItem","Breadcrumbs","crumb","console","log","TwoBirdsOneStone","tbosConstants","_i","_Object$keys","isFocused","toggleCreateView","toggleChecklistView","changeDisplay","toggleCreateTask","dispatch","boundActionCreators","bindActionCreators","tbosActionCreators","view","newDisplayState","objectSpread","game","scene","getScene","collisions","textToText","objectA","idTbos","objectB","children","focus","checkedCookieTrails","check_list","add_task_AddTask","react_dnd_lib","backend","HTML5Backend","tbos_canvas","tbos_drag_canvas","connect","present","handleTaskMouseOver","d","d3","transition","duration","html","offsetX","offsetY","handleTaskMouseOut","handleLineMouseOut","lineGenerator","lineData","g","params","xScale","yScale","dataset","line","append","datum","attr","on","decreaseOpacity","selectAll","data","enter","extendMaxTime","minTime","maxTime","extendMinTime","extendMaxH","extendMinH","ChartTrail","createChart","sortedTbosTimestamp","sort","b","minTimeStamp","maxTimeStamp","pointsSortedByHeight","toConsumableArray","maxCookieVision","maxHeight","findHeight","minHeight","allTrails","cookieTrailId","totalSet","priority","tempTrailId","reverseHiearchy","trail","push","lines","container","innerHTML","svgRoot","domain","range","axis","tickValues","tickPadding","tickSizeOuter","tickFormat","select","linesGroup","updateD3graph","point","Leaf","node","childData","toggleVisibility","toggleExpansion","expandedTrails","checkedTrails","isExpanded","label","ChartNavigator","toggleCookieTrail","expanded","newProps","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","cookieTrail","treeNodes","processCurrentName","currentName","childrenNames","currentChildNode","newTreeNodes","isValid","_childrenNames","childName","_this$state","jenny_attempt_Leaf","CookieTrail","cookieTrailActionCreators","chart_trail","chart_navigator","action","newState","currentTask","tasksToComplete","pop","tasksToDelete","nameToTasks","calculateActiveTasks","agg","currentCompleted","toCompleteTaskCount","currentTotal","currentDeleted","toDeleteTaskCount","totalTasksAdded","calculateCategoryVisionScorev2","category","calculateProductivityScore","makeDataPointv2","stopBoolean","productivity","vision","stop","lastAction","tbosReducers","base","intermediateResults","arrA","arrB","newMax","object","currentTrailToUpdate","activeChildren","newDataPoint","trailsToUpdate","max","reducers","getUser","cookies","startsWith","createDocFromStore","presentData","newDocument","returnUnderscoreUserId","idroot","users","store","createStore","undoable","includeAction","undoType","ignoreInitialState","applyMiddleware","thunkMiddleware","subscribe","getState","isUndo","future","batcher","batch","tasksCollection","usersCollection","updateCurrentTaskStateActions","Set","categorizeTaskActions","dragTaskActions","toggleTrailActions","has","update","delete","tempRoot","suffixed","commit","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","globalGameRegistry","two-birds-one-stone","cookie-trail","App","games","renderedGamesLinks","routes","original","simplified","link","react_router_dom","to","route","react_router","path","es","basename","process","ui","firebaseui","AuthUI","start","where","coll","forEach","docId","docData","userDoc","userData","ReactDOM","render","src_App","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.88ef702a.chunk.js","sourcesContent":["export const displayTypes = { createOne: \"createOne\", createMany: \"createMany\", checkList: \"checkList\"};\nexport const dndItemTypes = {BIRD: \"bird\", CANVAS: \"canvas\", TRASH: \"trash\", CHECKMARK: \"checkmark\"};\n","\n\nexport const ActionType = {\n  CREATE_TASK_COLLISION: 'CREATE_TASK_COLLISION',\n  DELETE_TASK: 'DELETE_TASK',\n  COMPLETE_TASK: 'COMPLETE_TASK',\n  CREATE_TASKS: 'CREATE_TASKS',\n  CATEGORIZE_TASK: 'CATEGORIZE_TASK',\n  TBOS_POP_ROOT: 'TBOS_POP_ROOT',\n  TBOS_ADD_ROOT: 'TBOS_ADD_ROOT',\n  TOGGLE_TRAIL: 'TOGGLE_TRAIL',\n  DRAG_TASK: 'DRAG_TASK',\n  TBOS_POP_ROOT_UNTIL: 'TBOS_POP_ROOT_UNTIL',\n  GET_TASKS: 'GET_TASKS',\n  UNDO: '@@redux-undo/UNDO'\n}\n","import {ActionType} from './action_type'\n\n\nexport function popTaskTbosRoot() {\n  return {\n    type: ActionType.TBOS_POP_ROOT\n  }\n}\n\nexport function addTaskTbosRoot(taskId){\n  return {\n    type: ActionType.TBOS_ADD_ROOT,\n    taskId: taskId\n  }\n}\n\nexport function popTaskTbosRootUntil(taskId) {\n  return {\n    type: ActionType.TBOS_POP_ROOT_UNTIL,\n    taskId: taskId\n  }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport {generateInitialUser, generateInitialTasks} from './init_generators';\n\n\nlet firebaseConfig = {\n  apiKey: \"AIzaSyBWj5sop-VPiIXKpF2ZTK6S4KSsyBRP2Bs\",\n  authDomain: \"plot-twisters.firebaseapp.com\",\n  projectId: \"plot-twisters\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nfirebase.firestore().enablePersistence().catch(function(err) {\n  if (err.code == 'failed-precondition') {\n    // Multiple tabs open, persistence can only be enabled\n    // in one tab at a a time.\n    // ...\n  } else if (err.code == 'unimplemented') {\n    // The current browser does not support all of the\n    // features required to enable persistence\n    // ...\n  }\n});\n\n\n\n\n\nexport const uiConfig = {\n  signInSuccessUrl: 'http://plottwisters.org/games/dist/two-birds-one-stone',\n  callbacks: {\n    uiShown: function() {\n      document.getElementById('second-wrap').style.display = 'none';\n    }\n  },\n  signInOptions: [{\n\n    signInSuccessUrl: 'http://plottwisters.org/games/dist/two-birds-one-stone',\n    provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    signInMethod: firebase.auth.EmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD,\n    forceSameDevice: false,\n    emailLinkSignIn: function() {\n      return {\n        handleCodeInApp: true\n      };\n    }\n  }]\n};\n\n\n\n\n\n\nexport const db = firebase.firestore();\nfirebase.auth().onAuthStateChanged((user) => {\n  if (user) {\n    document.cookie = \"userid=\" + user.uid+\"; expires=Thu, 18 Dec 2022 12:00:00 UTC\";\n    db.collection('users').doc(user.uid).get().then((doc)=>{\n      if (!doc.exists) {\n          db.collection(\"users\").doc(user.uid).set(generateInitialUser());\n          db.collection(\"tasks\").doc(\"idroot_\"+user.uid).set(generateInitialTasks(user.uid));\n      }\n    });\n  }\n});\nexport const auth = firebase.auth();\n","export function generateInitialUser() {\n    return {\n      \"mCV\": 1,\n      \"cT\": []\n    }\n}\n\nexport function generateInitialTasks(userid) {\n  return  {\n      \"taskAggregates\": {\n        \"deleted\": 0,\n        \"moved\": 0,\n        \"completed\": 0,\n        \"total\": 1\n      },\n      \"u\": userid,\n      \"hiearchy\": {\n      },\n      \"tbosCookieTrail\": [],\n      \"active\": 1,\n      \"name\": \"Your Main Trail\"\n    }\n}\n","import {ActionType} from './action_type'\nimport {db} from '../../../firebase/config';\nconst uuidv1 = require('uuid/v1');\n\nexport function deleteTaskAction(taskId, currentRoot) {\n\n  return {\n    type: ActionType.DELETE_TASK,\n    taskId,\n    currentRoot\n  }\n}\n\nexport function completeTaskAction(taskId, currentRoot, timestamp = new Date().getTime()) {\n  return {\n    type: ActionType.COMPLETE_TASK,\n    taskId,\n    currentRoot,\n    timestamp\n  }\n}\n\nexport function categorizeTaskAction(parent, child, currentRoot, timestamp = new Date().getTime()) {\n\n  return {\n    type: ActionType.CATEGORIZE_TASK,\n    parent,\n    child,\n    currentRoot\n  }\n}\n\n\nexport function createNewTaskAction(taskAKey, taskBKey, name, currentRoot) {\n  let uuid=uuidv1();\n  uuid=(uuid.split('-').join(\"\"))\n\n  return {\n    type: ActionType.CREATE_TASK_COLLISION,\n    taskA: taskAKey,\n    taskB: taskBKey,\n    taskId: uuid,\n    taskName: name,\n    currentRoot\n  }\n}\n\n\nexport function dragTaskAction(taskId, x, y) {\n  return {\n    type: ActionType.DRAG_TASK,\n    taskId,\n    x,\n    y\n  }\n}\n\nexport function createNewTasksAction(tasks, currentRoot) {\n\n  for (let index = 0; index < tasks.length; ++index) {\n    if(tasks[index].x == undefined || tasks[index].y == undefined) { //randomly generate a position if none exists\n      tasks[index].x = 0.8 - (Math.random() * 0.6);\n      tasks[index].y = 0.5 - (Math.random() * 0.4);\n    }\n  }\n  return {\n    type: ActionType.CREATE_TASKS,\n    tasks,\n    currentRoot\n  }\n}\n\nexport const getTasks = (tasks) => ({\n  type: ActionType.GET_TASKS,\n  tasks\n})\n","import { ActionCreators as UndoActionCreators } from 'redux-undo';\nexport * from './root';\nexport * from './task';\n\nexport let {redo, undo, jumpToFuture, jumpToPast} = UndoActionCreators;\n","export const TaskState = {\"active\": 1, \"completed\": 2, \"deleted\": 3}; //we don't start at 1 - otherwise these values evaluated\n//as standalone expressions will cause different behavior\n","\nimport React, {Component} from 'react';\nfunction StaticBird(props) {\n  let birdImgType = props.birdImgType;\n  //bird type determination\n  let birdGroup = \"single\";\n  let classType = (props.isCat)?'gaggle ':'';\n  if(props.count == 2) {\n   birdGroup = 'couple';\n   classType+= 'couple';\n   birdImgType= (birdImgType%2)+1;\n } else if(props.count > 2) {\n   birdGroup = 'gaggle';\n   classType+= 'group';\n   birdImgType= (birdImgType%2)+1;\n }\n\n  const birdStyles = {\n     backgroundImage:'url('+ process.env.PUBLIC_URL + '/dynamic-img/' + birdGroup + '-bird-' + birdImgType + '.png)'\n  }\n\n  return(\n    <div className={'bird-stone ' + classType}>\n    <div className='bird' style={birdStyles}></div>\n  <div className='stone'>\n    <div className='taskName'>{props.name}</div>\n    <div className='taskCount'>{props.count}</div>\n  </div>\n</div>);\n}\n\nfunction comparator(currProps, prevProps) {\n  if(!(currProps.name == prevProps.name && currProps.birdImgType == prevProps.birdImgType  &&\n    currProps.id == prevProps.id && currProps.count == prevProps.count\n    && currProps.isCat == prevProps.isCat)) {\n      return false;\n\n  } else {\n    return true;\n  }\n\n\n}\nexport default React.memo((props)=>{ return (<StaticBird {...props}/>)}, comparator)\n","import {dndItemTypes} from '../tbos_constants';\nimport { useDrag, useDrop } from 'react-dnd';\nimport React, {Component, useMemo, useEffect} from 'react';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport StaticBird from './static_bird';\nfunction makeNewBird() {\n  return Math.floor(Math.random() * Math.floor(6)) + 1;\n}\nfunction Bird(props)  {\n\n\n\n  //bird type\n  let birdImgType = useMemo(() => makeNewBird(), []);\n\n  const [{isDragging}, drag, preview] = useDrag({\n    item: { id: props.id, birdImgType, count:props.count, isCat: props.isCat, name: props.name, type: dndItemTypes.BIRD },\n\t\tcollect: monitor => ({\n\t\t\tisDragging: monitor.isDragging(),\n\t\t}),\n    end: (dragProps, monitor, component) => {\n\n\n      if(monitor.didDrop()) {\n        let droppedEvent = monitor.getDropResult();\n\n        switch(droppedEvent.type) {\n          case dndItemTypes.CANVAS:\n\n            props.actionCreators.dragTaskAction(dragProps.id, props.x + droppedEvent.deltaX, props.y + droppedEvent.deltaY);\n            break;\n          case dndItemTypes.BIRD:\n            if(droppedEvent.id != dragProps.id)\n              props.actionCreators.categorizeTaskAction(droppedEvent.id, dragProps.id, props.currentRoot);\n            else\n              props.actionCreators.dragTaskAction(dragProps.id, props.x + droppedEvent.deltaX, props.y + droppedEvent.deltaY);\n            break;\n          case dndItemTypes.CHECKMARK:\n            props.actionCreators.completeTaskAction(dragProps.id, props.currentRoot);\n            break;\n          case dndItemTypes.TRASH:\n            props.actionCreators.deleteTaskAction(dragProps.id, props.currentRoot);\n            break;\n          default:\n            break;\n        }\n      }\n    }\n  })\n\n\n\n\n  const [collectedProps, drop] = useDrop({\n    accept: dndItemTypes.BIRD,\n    collect: monitor=>({\n      isOver: monitor.isOver()\n    }),\n    drop(dragProps, monitor, component) {\n      let delta = monitor.getDifferenceFromInitialOffset();\n      let currentCanvas = document.getElementById(\"tbos-canvas\");\n      return {type: dndItemTypes.BIRD, \"id\": props.id,  deltaX: delta.x/currentCanvas.clientWidth, deltaY: delta.y/currentCanvas.clientHeight}\n    }\n  });\n\n  useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true })\n  }, []);\n  function refCallback(elementOrNode = null, options = null) {\n    if(elementOrNode == null)\n      return;\n    drag(elementOrNode, options);\n    drop(elementOrNode, options);\n  }\n\n\n\n\n\n\n\n\n  let x = props.x;\n  let y = props.y;\n  let name = props.name;\n  const birdPosition = {\n    top: ((y * 100) + \"%\"),\n    left: ((x * 100) + \"%\"),\n    position: 'absolute'\n  }\n\n  birdPosition[\"opacity\"] = isDragging ? 0 : 1;\n  birdPosition[\"height\"] =  isDragging ? 0 : '';\n  birdPosition[\"cursor\"] = isDragging? 'grabbing':  'grab';\n  let hoveredClass = collectedProps.isOver?'highlight':'';\n\n\n\n  return (\n    <div className={\"bird-stone \" + hoveredClass} onClick={props.clickListener}  ref={refCallback}  style={birdPosition}>\n\n      <StaticBird id={props.id} isTarget={collectedProps.isOver} name={props.name} isCat={props.isCat} count={props.count} birdImgType={birdImgType}/>\n    </div>\n  )\n}\n\nfunction comparator(currProps, prevProps) {\n  if(!(currProps.x == prevProps.x && currProps.y == prevProps.y &&\n    currProps.name == prevProps.name &&  prevProps.count == currProps.count\n  &&  prevProps.isCat == currProps.isCat)) {\n      return false;\n  } else {\n\n    return true;\n  }\n\n\n}\n\nexport default React.memo((props)=>{ return (<Bird {...props}/>)}, comparator);\n","import {dndItemTypes} from './../tbos_constants';\nimport {useDrop} from 'react-dnd';\nimport React, {Component} from 'react';\nimport Bird from './bird.js';\nimport {TaskState} from './../../global_constants';\n\nfunction TbosCanvas(props)  {\n\n  const [collectedProps, drop] = useDrop({\n      accept: dndItemTypes.BIRD,\n      drop(props, monitor, component) {\n        const delta = monitor.getDifferenceFromInitialOffset();\n        let currentCanvas = document.getElementById(\"tbos-canvas\");\n        return {type: dndItemTypes.CANVAS, deltaX: delta.x/currentCanvas.clientWidth, deltaY: delta.y/currentCanvas.clientHeight}\n      }\n    });\n\n\n\n    let [checkmarkProps, checkmarkHook]  = useDrop({\n        accept: dndItemTypes.BIRD,\n        drop(props, monitor, component) {\n          return {type: dndItemTypes.CHECKMARK}\n        },\n        collect: monitor=>({\n          isOver: monitor.isOver()\n        })\n      });\n    let [trashProps, trashHook] = useDrop({\n        accept: dndItemTypes.BIRD,\n        drop(props, monitor, component) {\n          return {type: dndItemTypes.TRASH}\n        },\n        collect: monitor=>({\n          isOver: monitor.isOver()\n        })\n      });\n\n  function birdClickListener(id) {\n      let leaf = (props.taskAggregates[id][\"total\"] - props.taskAggregates[id][\"deleted\"] -  props.taskAggregates[id][\"completed\"]) == 1;\n      if(!leaf)\n        props.actionCreators.addTaskTbosRoot(id);\n\n  }\n  function backListener() {\n    props.actionCreators.popTaskTbosRoot();\n  }\n  function dragEventHandler(event) {\n    event.dataTransfer.dropEffect = 'none'\n    event.dataTransfer.effectAllowed = 'none'\n  }\n\n  function renderTasks() {\n    let currentTasks = props.outerObject.getRootTasksAsArray();\n    return currentTasks.map((task) => {\n\n      //bird position\n      let {x, y} = props.position[task]\n      let isCat = (Object.keys(props[\"hiearchy\"][task]).filter(x=>(props[\"active\"][x] == TaskState.active))).length > 0\n\n       let tasksUnderCategory = props.taskAggregates[task][\"total\"] - props.taskAggregates[task][\"completed\"] - props.taskAggregates[task][\"deleted\"];\n\n      return (\n        <Bird isCat={isCat} count={tasksUnderCategory}  actionCreators={props.actionCreators} clickListener={birdClickListener.bind(this, task)} currentRoot={props.outerObject.getRootId()}  hiearchy={props.hiearchy[task]} x={x} y={y} key={task}  id={task} name={props.name[task]}/>\n        )\n    });\n  }\n\n  function backDisplay() {\n    if(props.tbosRootPath.length > 1) {\n      return \"block\"\n    } else {\n      return \"none\"\n    }\n  }\n\n\n\n  return (\n    <div id=\"game\">\n    <div ref={drop} id=\"tbos-canvas\">\n\n\n    </div>\n\n    <div ref={trashHook} className={trashProps.isOver?'teased':''} id=\"trash\"></div>\n    <div ref={checkmarkHook} className={checkmarkProps.isOver?'teased':''} id=\"checkmark\"></div>\n    <div id=\"undo\"  onClick={props.actionCreators.undo} ></div>\n    <div id=\"addBird\" onClick={props.focusAddTask}></div>\n    <div id=\"back\" onClick={backListener} style={{display:backDisplay()}}></div>\n    {renderTasks()}\n    </div>\n  )\n}\n\n\nexport default TbosCanvas;\n","import React, { Component } from 'react';\n\nexport default function CheckListTask(props)  {\n  return (\n    <label className=\"list-item\" style={{position: \"relative\"}}>\n      <input className=\"checkbox\" checked={props.isChecked} type=\"checkbox\" onChange={()=>{props.toggleCheck(props.id)}}/>\n      <span className=\"itemName\">{props.name}</span>\n    </label>\n  );\n}\n","import React, { Component } from 'react';\n\nexport default function CheckListCategory(props)  {\n  return (\n    <label className=\"list-item\" style={{position: \"relative\"}}>\n      <input className=\"checkbox\" checked={props.isChecked} type=\"checkbox\" onChange={()=>{props.toggleCheck(props.id)}}/>\n      <span onClick={()=>{props.actionCreators.addTaskTbosRoot(props.id)}} className=\"categoryName\">\n        <span  className=\"categoryCount\">{props.count}</span>\n      <span className=\"categoryNameWrapper\">{props.name}</span>\n      </span>\n    </label>\n  );\n}\n","import CheckListTask from './check_list_task';\nimport CheckListCategory from './check_list_category';\nimport React, {Component} from 'react';\nimport {TaskState} from './../../global_constants';\nclass CheckList extends Component {\n\n\n\n\n  //react parent component\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      \"checked\": {}\n    };\n    this.completeTasks = this.completeTasks.bind(this);\n    this.deleteTasks = this.deleteTasks.bind(this);\n\n  }\n\n\n  toggleCheck = item => {\n      let checked = Object.assign({}, this.state[\"checked\"]);\n      if(checked[item] != undefined) {\n        delete checked[item];\n      } else {\n        checked[item] = item;\n      }\n      this.setState({checked});\n\n  };\n  processTasksState(){\n    let tasks = this.props.tasks;\n    let isCat = false;\n    tasks = tasks.map((task)=> {\n      isCat = (Object.keys(this.props[\"hiearchy\"][task]).filter(x=>(this.props[\"active\"][x] == TaskState.active))).length > 0\n      if(isCat) {\n        let tasksUnderCategory = this.props.taskAggregates[task][\"total\"] - this.props.taskAggregates[task][\"completed\"] - this.props.taskAggregates[task][\"deleted\"];\n\n        return (<CheckListCategory  isChecked={this.state.checked[task] != undefined} toggleCheck={this.toggleCheck} count={tasksUnderCategory} actionCreators={this.props.actionCreators} name={this.props.name[task]} id={task} key={task} name={this.props.name[task]}  amount={tasksUnderCategory}/>);\n      } else {\n        return (<CheckListTask isChecked={this.state.checked[task] != undefined} toggleCheck={this.toggleCheck} id={task} key={task} name={this.props.name[task]} />)\n      }\n    });\n    return tasks;\n  }\n  checkIfArraySame(prevTasks, currTasks) {\n    if(prevTasks.length != currTasks.length)\n      return false;\n    for(let i = 0; i < currTasks.length; ++i) {\n      if(prevTasks[i] != currTasks[i])\n        return false;\n    }\n    return true;\n  }\n  componentDidUpdate(prevProps) {\n    let newChecked = {}\n    for(let task of this.props.tasks) {\n      if(this.state.checked[task] != undefined)\n        newChecked[task] = task;\n    }\n    if(!this.checkIfArraySame(Object.keys(newChecked), Object.keys(this.state.checked))) {\n      this.setState({\"checked\":newChecked});\n    }\n  }\n  completeTasks(){\n    let currentTimestamp = new Date().getTime();\n    for(let checkItem in this.state[\"checked\"]) {\n      this.props.actionCreators.completeTaskAction(checkItem, this.props.tbosRootPath[this.props.tbosRootPath.length - 1], currentTimestamp);\n    }\n    this.setState({\"checked\":{}})\n  }\n\n  deleteTasks(){\n    let currentTimestamp = new Date().getTime();\n    for(let checkItem in this.state[\"checked\"]) {\n      this.props.actionCreators.deleteTaskAction(checkItem, this.props.tbosRootPath[this.props.tbosRootPath.length - 1]);\n    }\n    this.setState({\"checked\":{}})\n  }\n  render() {\n\n    let tasks = this.processTasksState();\n\n    let shouldNotDisplayButtons = (Object.keys(this.state[\"checked\"]) == 0);\n    return (\n      <div>\n        <div id=\"allTasks\">\n          {tasks}\n        </div>\n        <div id=\"listActions\" style={{display: (shouldNotDisplayButtons)?\"none\":\"block\"}} >\n          <button onClick={this.deleteTasks} id=\"deleteTask\">Delete tasks</button>\n          <button onClick={this.completeTasks} id=\"completeTask\">Complete tasks</button>\n        </div>\n      </div>\n    );\n  }\n\n\n\n\n}\n\n\nexport default CheckList;\n","import React, { Component } from 'react';\n\n\n\nexport default class AddTask extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.state = {\n      value: ''\n    }\n\n  }\n  handleChange(event) {\n      this.setState({value: event.target.value});\n  }\n\n  createNewTask(taskName) {\n    if (taskName != \"\") {\n      let uuid = require('uuid/v1');\n      let tasks = [{\n        \"name\": taskName,\n        \"id\": uuid().split('-').join(\"\")\n      }];\n\n      this.props.actionCreators.createNewTasksAction(tasks, this.props.currentRoot);\n      this.setState({value: ''});\n    }\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n\n     this.createNewTask(e.target.value);\n     e.preventDefault();\n   }\n  }\n\n  handleSubmit(event) {\n    this.props.actionCreatorcreateNewTask(this.state.value);\n    this.setState({value:''});\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div id=\"addTask\">\n        <input type=\"text\" value={this.state.value} onChange={this.handleChange} onKeyPress={this.handleKeyPress} className=\"addTaskName\"/>\n      </div>\n    );\n  }\n}\n","import React, {memo, useEffect, useState}from 'react'\nimport { useDragLayer } from 'react-dnd'\nimport {dndItemTypes} from '../tbos_constants';\nimport StaticBird from './static_bird';\nconst layerStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%',\n  padding: 0,\n  margin: 0\n}\n\n\nfunction getItemStyles(currentOffset) {\n  if (!currentOffset) {\n    return {\n      display: 'none'\n    }\n  }\n  let { x, y } = currentOffset\n\n  const transform = `translate(${x}px, ${y}px)`\n  return {\n    transform,\n    WebkitTransform: transform,\n    userSelect: 'none',\n\n  }\n}\n\nconst BirdStaticPreview = memo(({id , birdImgType, name, count ,isCat}) => {\n\n  return (\n    <div>\n    <StaticBird  id={id} birdImgType={birdImgType} name={name} count={count} isCat={isCat} />\n    </div>\n  )\n})\n\nconst CustomDragLayer = props => {\n  const {\n    itemType,\n    item,\n    currentOffset\n  } = useDragLayer(monitor => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    currentOffset: monitor.getSourceClientOffset()\n  }))\n  function renderItem() {\n    switch (itemType) {\n      case dndItemTypes.BIRD:\n\n        return <BirdStaticPreview  id={item.id} birdImgType={item.birdImgType} count={item.count} isCat={item.isCat} name={item.name} />\n      default:\n        return null\n    }\n  }\n\n  return (\n    <div style={layerStyles}>\n      <div className='bird-stone current grabbing'\n        style={getItemStyles(currentOffset)}\n      >\n        {renderItem()}\n      </div>\n    </div>\n  )\n}\nexport default CustomDragLayer;\n","import React, { Component } from 'react';\n\n export default function Breadcrumbs(props)  {\n\n   let crumb = props.tbosRootPath.map((task) => {\n    function crumbListener() {\n      console.log(task);\n      props.actionCreators.popTaskTbosRootUntil(task);\n    }\n\n     return (\n      <span key={task} onClick={crumbListener}>{props.name[task]}</span>\n    )\n  });\n\n   return (\n    <div id=\"breadcrumb\">\n      {crumb}\n    </div>\n  );\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport * as tbosConstants from './tbos_constants';\nimport * as tbosActionCreators from './../redux/actions/tbos';\nimport {bindActionCreators} from 'redux';\nimport {TaskState} from './../global_constants';\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nimport TbosCanvas from './components/tbos_canvas';\nimport CheckList from './components/check_list';\nimport AddTask from './components/add_task';\nimport CustomDragLayer from './components/tbos_drag_canvas';\nimport Breadcrumbs from './components/breadcrumbs';\n\nclass TwoBirdsOneStone extends Component {\n\n\n\n\n  //react parent component\n  constructor(props) {\n    super(props);\n    let displayTypes = tbosConstants.displayTypes;\n    let display = {};\n    for (var type of Object.keys(displayTypes)) {\n      display[type] = \"none\";\n    }\n    this.state = {\n      display,\n      isFocused: false\n    };\n\n    this.createNewTask = this.createNewTask.bind(this);\n    this.toggleCreateView = this.toggleCreateView.bind(this);\n    this.toggleChecklistView = this.toggleChecklistView.bind(this);\n    this.changeDisplay = this.changeDisplay.bind(this);\n    this.toggleCreateTask = this.toggleCreateTask.bind(this);\n    this.focusAddTask = this.focusAddTask.bind(this);\n\n    const {dispatch} = props;\n    this.boundActionCreators = bindActionCreators(tbosActionCreators, dispatch);\n\n\n\n  }\n\n  changeDisplay(view) {\n    let newDisplayState = {\n      ...this.state.display\n    };\n    newDisplayState[view] = newDisplayState[view] == \"block\"\n      ? \"none\"\n      : \"block\";\n    this.setState({\"display\": newDisplayState});\n  }\n\n  //handler for creating a new task from create new task view from pulling together\n  //other tasks\n  createNewTask(taskId) {\n\n    let taskAKey = this.game.scene.getScene(\"MainView\").collisions.textToText.objectA.idTbos;\n    let taskBKey = this.game.scene.getScene(\"MainView\").collisions.textToText.objectB.idTbos;\n\n    this.boundActionCreators.createNewTaskAction(taskAKey, taskBKey, taskId, this.getRootId()); //dispatches action to make a new task from two subtasks\n\n    this.toggleCreateTask();\n  }\n  toggleCreateTask() {\n    this.changeDisplay(tbosConstants.displayTypes.createOne);\n  }\n  toggleCreateView() {\n    this.changeDisplay(tbosConstants.displayTypes.createMany);\n  }\n\n  toggleChecklistView() {\n    this.changeDisplay(tbosConstants.displayTypes.checkList);\n  }\n\n  getRootId() {\n\n    return this.props.tbosRootPath[this.props.tbosRootPath.length - 1];\n  }\n\n  getRootTasksAsArray() {\n    let tasks = Object.keys(this.props.hiearchy[this.getRootId()])\n    return tasks.filter(task => this.props.active[task] == TaskState.active);\n  }\n\n  focusAddTask() {\n     this.setState({\"isFocused\": true});\n  }\n\n  /*drag and drop functionality*/\n\n\n\n  //if component updates change focus based on component's focused state\n  //for focusing checklist view on clicking add button\n  componentDidUpdate(props) {\n\n    if (this.state.isFocused == true) {\n      document.getElementById(\"addTask\").children[0].focus();\n      this.setState({\"isFocused\": false});\n    }\n  }\n\n\n  //add game container and hidden views into DOM\n  render() {\n    console.log(this.props.checkedCookieTrails);\n    return (\n\n      <div id=\"gameWrap\">\n\n         <Breadcrumbs {...this.props} actionCreators={this.boundActionCreators} />\n\n         <button id=\"flip\"></button>\n          <div id=\"list\">\n            <div className=\"upTreeList\"></div>\n            <CheckList {...this.props}  actionCreators={this.boundActionCreators}  tasks={this.getRootTasksAsArray()}/>\n            <AddTask actionCreators={this.boundActionCreators} currentRoot={this.props.tbosRootPath[this.props.tbosRootPath.length - 1]}/>\n\n          </div>\n\n        <DndProvider backend={HTML5Backend}>\n\n          <TbosCanvas focusAddTask={this.focusAddTask}  actionCreators={this.boundActionCreators} outerObject={this} {...this.props}></TbosCanvas>\n          <CustomDragLayer />\n\n        </DndProvider>\n\n      </div>\n    );\n  }\n\n\n\n}\n\nfunction mapStateToProps(state) {\n  \n  return state.present;\n}\n\nexport default connect(mapStateToProps)(TwoBirdsOneStone);\n","import * as d3 from \"d3\";\n\nfunction handleTaskMouseOver(d) { // Add interactivity\n    d3.select('.desc').transition()\n    .duration(200)\n    .style(\"opacity\", 1);\n    d3.select('.desc').html(d.name)\n    .style(\"left\", (d3.event.offsetX) + \"px\")\n    .style(\"top\", (d3.event.offsetY - 28) + \"px\");\n}\n\nfunction handleTaskMouseOut(d) {\n    d3.select('.desc').transition()\n    .duration(200)\n    .style(\"opacity\", 0);\n}\n\n\nfunction handleLineMouseOut(d) {\n  d3.select('.desc').transition()\n    .duration(200)\n    .style(\"opacity\", 0);\n\n  resetOpacity(this);\n}\n\nfunction decreaseOpacity(g) {\n  d3.selectAll('#lines .lineContainer').transition()\n    .duration(200).style('opacity', 0.15);\n  g.transition().duration(300).style('opacity', 1);\n}\n\nfunction resetOpacity(line) {\n    d3.selectAll('#lines .lineContainer').style('opacity', 1);\n}\n\nfunction lineGenerator(lineData, g, params) {\n  let {xScale, yScale} = params;\n  let dataset = lineData[\"data\"];\n  let line = d3.line()\n    .x(function(d) {\n      return xScale(d.x);\n    })\n    .y(function(d) {\n      return yScale(d.y);\n    });\n  g.append(\"path\")\n    .datum(dataset)\n    .attr(\"class\", \"line\")\n    .attr(\"d\", line).on(\"mouseover\", function() {\n      d3.select('.desc').transition()\n        .duration(200)\n        .style(\"opacity\", 1);\n        d3.select('.desc').html(lineData['label'])\n        .style(\"left\", (d3.event.offsetX) + \"px\")\n        .style(\"top\", (d3.event.offsetY - 28) + \"px\");\n\n      decreaseOpacity(g);\n    })\n    .on(\"mouseout\", handleLineMouseOut);\n\n  g.selectAll(\".dot\")\n    .data(dataset)\n    .enter().append(\"circle\")\n    .attr(\"class\", \"dot\")\n    .attr(\"cx\", function(d) {\n      return xScale(d.x)\n    })\n    .attr(\"cy\", function(d) {\n      return yScale(d.y)\n    })\n    .attr(\"r\", 6)\n    .on(\"mouseover\", handleTaskMouseOver)\n    .on(\"mouseout\", handleTaskMouseOut);\n\n\n}\n\nfunction extendMaxTime(minTime, maxTime) {\n  return maxTime + 0.2 * (maxTime - minTime)\n}\n\nfunction extendMinTime(minTime, maxTime) {\n    return minTime - 0.1 * (maxTime - minTime)\n}\nfunction extendMaxH(minTime, maxTime) {\n  return maxTime + 0.2 * (maxTime - minTime)\n}\n\nfunction extendMinH(minTime, maxTime) {\n    return minTime - 0.2 * (maxTime - minTime)\n}\n\n\nexport function updateD3graph(minTime, maxTime, minHeight, maxHeight, lines, container) {\n  container.innerHTML = \"\";\n  let width = container.clientWidth;\n  let height = container.clientHeight;\n\n  let div = d3.select(container).append(\"div\")\n      .attr(\"class\", \"desc\")\n      .style(\"opacity\", 0);\n\nvar margin = {top: 20, right: 30, bottom: 20, left: 30};\n\n  let svgRoot = d3.select(container).append(\"svg\").attr(\"width\", '100%')\n    .attr(\"height\", '100%')\n    .attr(\"id\", \"domChart\")\n      .attr('viewBox','0 0 '+ width +' '+height)\n      .attr('preserveAspectRatio','xMinYMin')\n      .append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      width = width - margin.left - margin.right;\n      height = height  - margin.top - margin.bottom;\n\n\n    // x axis\n    let xScale = d3.scaleTime().domain([extendMinTime(minTime, maxTime), extendMaxTime(minTime , maxTime)]).range([0, width]);\n\n    let axis = svgRoot.append(\"g\")\n        .attr(\"class\", \"x-axis\")\n        .attr(\"transform\", \"translate(0,\" +(height - 20) + \")\")\n        .call(d3.axisBottom(xScale).tickValues(d3.range(minTime,  extendMaxTime(minTime , maxTime) , (maxTime - minTime)/2)).tickPadding(10).tickSizeOuter(0).tickFormat(d3.timeFormat(\"%-I %p\"))); // Create an axis component with d3.axisBottom\n  //  axis.tickSizeOuter(0);\n\n  let marker = svgRoot.append(\"svg:defs\").append(\"svg:marker\")\n    .attr(\"id\", \"arrowLeft\")\n    .attr(\"viewBox\", \"0 -5 10 10\")\n    .attr('refY', 0)//so that it comes towards the center.\n    .attr('refX', 3)\n    .attr(\"markerWidth\", 10)\n    .attr(\"markerHeight\", 7)\n    .append(\"svg:path\")\n    .attr(\"d\", \"M0,-5L10,0L0,5\");\n\n    let markerRight =svgRoot.append(\"svg:defs\").append(\"svg:marker\")\n      .attr(\"id\", \"arrowRight\")\n      .attr(\"viewBox\", \"0 -5 10 10\")\n      .attr('refY', 0)//so that it comes towards the center.\n      .attr('refX', 7)\n      .attr(\"markerWidth\", 10)\n      .attr(\"markerHeight\", 7)\n\n    .append(\"svg:path\")\n      .attr(\"d\", \"M10,-5L0,0L10,5\");\n\n      axis.select(\"path\").attr(\"marker-end\", \"url(#arrowLeft)\").attr(\"marker-start\", \"url(#arrowRight)\");\n    let yScale = d3.scaleLinear()\n    .domain([extendMinH(minHeight , maxHeight), extendMaxH(minHeight , maxHeight)]) // input\n    .range([height, 0]); // output\n\n  let params = {xScale, yScale};\n  let lineGroup;\n  let linesGroup =   svgRoot.append(\"g\").attr(\"id\", \"lines\");\n  for(let lineData of lines) {\n      lineGroup = linesGroup.append(\"g\").attr(\"class\", \"lineContainer\");\n      lineGenerator(lineData, lineGroup, params);\n  }\n\n\n\n}\nfunction d3Loader() {\n\n}\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {TaskState} from './../../global_constants';\nimport {updateD3graph} from './d3graph';\nclass ChartTrail extends Component {\n\n\n  //react parent component\n  constructor(props) {\n    super(props);\n    this.createChart = this.createChart.bind(this);\n  }\n\n\n\n\n\n\n\n  render() {\n    return (\n      <div id=\"chartWrap\">\n\n      </div>\n    );\n  }\n\n  createChart() {\n    if(this.props.tbosCookieTrail[\"idroot\"].length == 0)\n      return;\n      let sortedTbosTimestamp = this.props.tbosCookieTrail[\"idroot\"].sort((a, b)=> {\n        return a[\"timestamp\"] - b[\"timestamp\"];\n      });\n      console.log(sortedTbosTimestamp);\n    let minTimeStamp =sortedTbosTimestamp[0][\"timestamp\"];\n    let maxTimeStamp = sortedTbosTimestamp[sortedTbosTimestamp.length - 1][\"timestamp\"];\n    let pointsSortedByHeight = [...this.props.tbosCookieTrail[\"idroot\"]].sort((a, b)=> {\n      return (0.5 * a[\"productivity\"] + 0.5 * (a[\"vision\"]/this.props.maxCookieVision) ) -(0.5 * b[\"productivity\"] + 0.5 * (b[\"vision\"]/this.props.maxCookieVision)) ;\n    });\n    console.log(pointsSortedByHeight);\n    function findHeight(point, mCV) {\n      return  0.5 * point[\"productivity\"] + 0.5 * (point[\"vision\"]/mCV);\n    }\n    let maxHeight = findHeight(pointsSortedByHeight[pointsSortedByHeight.length -1], this.props.maxCookieVision);\n    let minHeight = findHeight(pointsSortedByHeight[0],this.props.maxCookieVision)\n    let allTrails = [];\n    for(let cookieTrailId of this.props.checkedCookieTrails) {\n      let totalSet = {};\n      totalSet[\"label\"] = this.props.name[cookieTrailId];\n      totalSet[\"trailId\"] = cookieTrailId;\n      let priority = 0;\n      let tempTrailId = cookieTrailId;\n      while(tempTrailId != undefined) {\n        tempTrailId = this.props.reverseHiearchy[tempTrailId];\n        priority+=1;\n      }\n      totalSet[\"priority\"] =  priority;\n      console.log(cookieTrailId);\n      console.log(this.props.tbosCookieTrail[cookieTrailId]);\n      totalSet[\"data\"] = this.props.tbosCookieTrail[cookieTrailId].sort((a, b)=> {\n        return (a[\"timestamp\"] - b[\"timestamp\"])  + 0.1 * ((0.5 * a[\"productivity\"] + 0.5 * (a[\"vision\"]/this.props.maxCookieVision) ) -(0.5 * b[\"productivity\"] + 0.5 * (b[\"vision\"]/this.props.maxCookieVision)));\n      }).map((trail) => {\n      return {\n        x: trail[\"timestamp\"],\n        y: 0.5 * trail[\"productivity\"] + 0.5 * (trail[\"vision\"]/this.props.maxCookieVision),\n        name: trail[\"name\"]\n      }\n    }, this);\n    allTrails.push(totalSet);\n  }\n  allTrails.sort(function(a, b) {\n    return (a.priority - b.priority);\n  });\n\n  updateD3graph(minTimeStamp, maxTimeStamp, minHeight, maxHeight, allTrails, document.getElementById(\"chartWrap\"));\n  }\n  componentDidMount() {\n    this.createChart();\n  }\n  componentDidUpdate(prevProps) {\n    this.createChart();\n\n  }\n}\n\nexport default ChartTrail;\n","import React, {Component} from 'react';\n\nclass Leaf extends React.Component {\n\n\n\n    render() {\n\n      let data = this.props.node.children;\n\n      if(this.props.node.children == undefined) {\n        data = [];\n      }\n      let children = data.map((childData)=>(\n        <Leaf  key={childData.value} toggleVisibility={this.props.toggleVisibility} toggleExpansion={this.props.toggleExpansion} expandedTrails={this.props.expandedTrails}  checkedTrails={this.props.checkedTrails} node={childData}/>\n      ));\n      let isExpanded = (this.props.expandedTrails[this.props.node.value]!= undefined);\n      return(\n      <div className=\"plot\">\n        <input className=\"plotVisibility\" checked={this.props.checkedTrails[this.props.node.value]!= undefined}  onChange={()=>{this.props.toggleVisibility(this.props.node.value)}}  type=\"checkbox\"/>\n        <span className=\"plotName\">{this.props.node.label}</span>\n        <div className=\"expandCarrot\"  style={{display: (this.props.node.children != undefined && this.props.node.children.length != 0)?'block':'none'}} onClick={()=>{this.props.toggleExpansion(this.props.node.value)}}></div>\n        <div className=\"divider\"></div>\n        <div style={{display: (isExpanded)?'block':'none'}}>\n        {children}\n        </div>\n      </div>\n      );\n    }\n}\n\nexport default Leaf;\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {TaskState} from './../../global_constants';\nimport Leaf from './jenny-attempt/Leaf';\n\nclass ChartNavigator extends Component {\n\n\n  //react parent component\n  constructor(props) {\n    super(props);\n\n\n\n\n\n    let checked = {};\n    for(let trail of this.props.checkedCookieTrails) {\n      checked[trail] = trail;\n    }\n    this.state = {\n        checked,\n        expanded: {}\n    };\n\n  }\n  toggleVisibility = item => {\n      let checked = Object.assign({}, this.state[\"checked\"]);\n      if(checked[item] != undefined) {\n        delete checked[item];\n      } else {\n        checked[item] = item;\n      }\n      this.setState({checked});\n      this.props.toggleCookieTrail(Object.keys(checked));\n  };\n  toggleExpansion = item => {\n\n      let expanded = Object.assign({}, this.state[\"expanded\"]);\n      if(expanded[item] != undefined) {\n        delete expanded[item];\n      } else {\n        expanded[item] = item;\n      }\n      this.setState({expanded});\n  };\n\n  componentDidUpdate(newProps) {\n  const oldProps = this.props;\n\n  if(this.props.checkedCookieTrails !== newProps.checkedCookieTrails) {\n\n    let checked = {};\n    for(let trail of this.props.checkedCookieTrails) {\n      checked[trail] = trail;\n    }\n    this.setState({   checked })\n  }\n}\n\n\n  //add game container and hidden views into DOM\n  render() {\n    let hiearchy = this.props.hiearchy;\n    let active = this.props.active;\n    let name = this.props.name;\n    let cookieTrail = this.props.tbosCookieTrail;\n    console.log(cookieTrail);\n    function processCurrentName(currentName) {\n      // recursion to generate tree from redux store\n      let currentRoot = hiearchy[currentName];\n      let childrenNames = [];\n      for(let child in currentRoot) {\n          if(active[child] == TaskState.deleted) {\n            continue;\n          }\n          childrenNames.push(child);\n      }\n      let newTreeNodes = {children: [], className: 'hiearchy-cookie-trail-checkbox', value: currentName, label: name[currentName], isValid: true};\n      let currentChildNode;\n\n      if(childrenNames.length > 0) {\n        for(let childName of childrenNames) {\n\n\n          currentChildNode = processCurrentName(childName);\n          if(currentChildNode.isValid && cookieTrail[childName].length > 0) {\n            newTreeNodes.children.push(currentChildNode);\n          }\n        }\n      } else {\n        newTreeNodes[\"isValid\"] = false;\n      }\n      return newTreeNodes;\n    }\n    this.treeNodes = [processCurrentName(\"idroot\")];\n    const { checked, expanded } = this.state;\n    console.log(checked);\n    return (\n\n\n      <div id=\"plotsWrap\">\n        <div id=\"plots\">\n          <div className=\"bar\"></div>\n          <Leaf checkedTrails={checked} toggleVisibility={this.toggleVisibility} toggleExpansion={this.toggleExpansion}  expandedTrails={expanded} key={this.treeNodes[0].value} node={this.treeNodes[0]}/>\n        </div>\n      </div>\n    );\n  }\n\n  //instantiate phaser game after render\n\n\n  //commented out for now - this is not important as long as there is no need for the\n  //immediate dom parent of the phaser game to rerender - but may be important\n  //if there is a need\n  // shouldComponentUpdate() {\n  //   console.log(this.state.display);\n  //   return true;\n  // }\n}\n\nexport default ChartNavigator;\n","import {ActionType} from './tbos/action_type';\n\n\nexport function toggleCookieTrail(trail) {\n  return {\n    type: ActionType.TOGGLE_TRAIL,\n    trail\n  }\n}\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {TaskState} from './../global_constants';\nimport ChartTrail from './components/chart_trail.js';\nimport ChartNavigator from './components/chart_navigator.js';\nimport * as cookieTrailActionCreators from './../redux/actions/trail_viewer.js';\nimport {bindActionCreators} from 'redux';\nimport './../styles/cookietrail.scss'\nclass CookieTrail extends Component {\n\n\n  //react parent component\n  constructor(props) {\n    super(props);\n    const { dispatch } = props;\n    this.boundActionCreators = bindActionCreators(cookieTrailActionCreators, dispatch);\n\n  }\n\n\n\n\n  //add game container and hidden views into DOM\n  render() {\n\n    return (\n      <div id=\"trailWrap\">\n        <div id=\"topBar\"></div>\n        <ChartTrail {...this.boundActionCreators} {...this.props} />\n        <ChartNavigator {...this.boundActionCreators} {...this.props}/>\n      </div>\n    );\n  }\n\n  //instantiate phaser game after render\n  componentDidMount() {\n\n  }\n\n  //commented out for now - this is not important as long as there is no need for the\n  //immediate dom parent of the phaser game to rerender - but may be important\n  //if there is a need\n  shouldComponentUpdate() {\n\n    return true;\n  }\n}\n\nfunction mapStateToProps(state){\n  return state.present;\n}\nexport default connect(mapStateToProps)(CookieTrail);\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Login extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {value: ''};\n    }\n\n  render() {\n    return (\n      <div className=\"boop\">\n      </div>\n    );\n  }\n\n  //on press enter a new task is created with the appropriate name\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n     this.props.createNewTask(e.target.value);\n     e.preventDefault();\n   }\n  }\n}\n\n\n\nexport default Login;\n","import {ActionType} from './../actions/tbos/action_type'\n\nexport default function reverseHiearchy(state= {}, action) {\n  let newState = state;\n  switch(action.type) {\n    case ActionType.CATEGORIZE_TASK:\n        newState = {...state};\n        newState[action.child] = action.parent;\n        break;\n    case ActionType.CREATE_TASK_COLLISION:\n\n      newState = {...state};\n      newState[action.taskA] = action.taskId;\n      newState[action.taskB] = action.taskId;\n      newState[action.taskId] = action.currentRoot;\n      break;\n    case ActionType.CREATE_TASKS:\n      newState = {...state}\n      for(let task of action.tasks) {\n        newState[task.id] =  action.currentRoot;\n      }\n    default:\n      break;\n  }\n  return newState;\n}\n","import {ActionType} from './../actions/tbos/action_type'\n\nexport default function hiearchy(state = {}, action) {\n  let newState = state;\n  switch(action.type) {\n    //create new task action\n    case ActionType.CREATE_TASK_COLLISION:\n      newState = {...state}\n\n      newState[action.taskId] = {}\n      newState[action.taskId][action.taskA] = action.taskA;\n      newState[action.taskId][action.taskB] = action.taskB;\n      newState[action.currentRoot] = {...newState[action.currentRoot]}\n      newState[action.currentRoot][action.taskId] = action.taskId\n      delete newState[action.currentRoot][action.taskA];\n      delete newState[action.currentRoot][action.taskB];\n\n      break;\n\n    case ActionType.CATEGORIZE_TASK:\n        newState = {...state};\n        newState[action.parent] = {...newState[action.parent]};\n        newState[action.parent][action.child] = action.child;\n        newState[action.currentRoot] =  {...newState[action.currentRoot]}\n        delete newState[action.currentRoot][action.child]\n        break;\n    case ActionType.CREATE_TASKS:\n      newState = {...state};\n      //update tasks tree\n\n      for(let task of action.tasks) {\n        newState[task.id]  = {};\n        newState[action.currentRoot][task.id] =  task.id;\n      }\n    default:\n      break;\n  }\n  return  newState;\n\n}\n","import {ActionType} from './../actions/tbos/action_type'\nimport {TaskState} from './../../global_constants'\nexport default function active(state = {}, action) {\n  let newState = state[\"active\"];\n  let currentTask;\n  switch(action.type) {\n    case ActionType.CREATE_TASK_COLLISION:\n      newState = {...state[\"active\"]}\n      newState[action.taskId] = TaskState.active;\n      break;\n    case ActionType.COMPLETE_TASK:\n      newState = {...state[\"active\"]}\n      let tasksToComplete = [action.taskId];\n\n      //delete the task and all tasks that are a child of the task\n      while(tasksToComplete.length > 0) {\n        currentTask = tasksToComplete.pop();\n        newState[currentTask] = TaskState.completed;\n        for(let child in state[\"hiearchy\"][currentTask]) {\n          if(newState[\"active\"] == TaskState.active)\n            tasksToComplete.push(child);\n        }\n      }\n      break;\n    case ActionType.DELETE_TASK:\n      newState = {...state[\"active\"]};\n      let tasksToDelete = [action.taskId];\n\n      //delete the task and all tasks that are a child of the task\n      while(tasksToDelete.length > 0) {\n        currentTask = tasksToDelete.pop();\n        newState[currentTask] = TaskState.deleted;\n        for(let child in state[\"hiearchy\"][currentTask]) {\n          if(newState[\"active\"] == TaskState.active)\n            tasksToDelete.push(child);\n        }\n      }\n\n      break;\n    case ActionType.CREATE_TASKS:\n      newState = {...state[\"active\"]}\n      for(let task of action.tasks) {\n        newState[task.id] =  TaskState.active;\n      }\n    default:\n      break;\n  }\n\n  return newState;\n}\n","import {ActionType} from './../actions/tbos/action_type'\n\nexport default function name(state= {}, action) {\n  let newState = state;\n  switch(action.type) {\n    case ActionType.CREATE_TASK_COLLISION:\n\n      newState = {...state};\n\n      newState[action.taskId] = action.taskName;\n      break;\n    case ActionType.CREATE_TASKS:\n      newState = {...state}\n      for(let task of action.tasks) {\n        newState[task.id] =  task.name;\n      }\n    default:\n      break;\n  }\n  return newState;\n}\n","import {ActionType} from './../actions/tbos/action_type'\n\nexport default function tbosRootPath(state= {}, action) {\n  let newState = state;\n  switch(action.type) {\n    case ActionType.TBOS_POP_ROOT:\n      newState = [...state];\n      newState.pop();\n      break;\n    case ActionType.TBOS_ADD_ROOT:\n      newState = [...state, action.taskId]\n      break;\n    case ActionType.TBOS_POP_ROOT_UNTIL:\n        newState = [...state]\n        while (newState[newState.length - 1] != action.taskId) {\n          newState.pop();\n        }\n    default:\n      break;\n  }\n  return newState;\n}\n","import {ActionType} from './../actions/tbos/action_type'\n\nexport default function nameToTasks(state= {}, action) {\n  let newState = state;\n  switch(action.type) {\n    case ActionType.CREATE_TASK_COLLISION:\n\n      newState = {...state};\n\n      if(newState[action.taskName] == undefined) {\n        newState[action.taskName] = [];\n      }\n      newState[action.taskName] = [...newState[action.taskName], action.taskId];\n      break;\n    case ActionType.CREATE_TASKS:\n      newState = {...state}\n      for(let task of action.tasks) {\n        if(newState[task.name] == undefined) {\n          newState[task.name] = [];\n        }\n        newState[task.name] =  [...newState[task.name],task.id];\n      }\n      break;\n    default:\n      break;\n  }\n  return newState;\n}\n","import {ActionType} from './../actions/tbos/action_type';\nimport {TaskState} from './../../global_constants';\n\nfunction calculateActiveTasks(agg) {\n  return agg[\"total\"] - agg[\"completed\"] -  agg[\"deleted\"];\n}\n\nfunction createAggregate() {\n  return {\"completed\": 0, \"deleted\": 0, \"total\": 1, \"moved\": 0};\n}\nexport default function taskAggregates(state= {}, action) {\n  let newState = state[\"taskAggregates\"];\n  let reverseHiearchy = state[\"reverseHiearchy\"];\n  let currentTask = action.currentRoot;\n  switch(action.type) {\n    case ActionType.CREATE_TASK_COLLISION:\n\n      newState = {...newState};\n\n      newState[action.taskId] = createAggregate();\n\n      let taskAValue;\n      let taskBValue;\n      for(let key in newState[action.taskB]) {\n        if(key != \"moved\") {\n          taskAValue = newState[action.taskA][key];\n          taskBValue = newState[action.taskB][key];\n\n          let count =  taskAValue + taskBValue;\n          newState[action.taskId][key] = count;\n        }\n      }\n\n      newState[action.taskA][\"moved\"] += 1;\n      newState[action.taskB][\"moved\"] += 1;\n\n      break;\n    case ActionType.CATEGORIZE_TASK:\n        newState = {...newState};\n        newState[action.child] = {...newState[action.child]}\n        newState[action.child][\"moved\"] += 1;\n        let parent;\n        let child;\n\n\n        let isCat = (Object.keys(state[\"hiearchy\"][action.parent]).filter(x=>(state[\"active\"][x] == TaskState.active))).length > 1;\n        newState[action.parent] = {...newState[action.parent]}\n        for(let key in newState[action.parent]) {\n          if(key != \"moved\") {\n            parent = newState[action.parent][key];\n            child = newState[action.child][key];\n            let count =  parent + child;\n            newState[action.parent][key] = count;\n          }\n        }\n        break;\n    case ActionType.COMPLETE_TASK:\n        newState = {...newState};\n\n\n        let toCompleteTaskCount = newState[action.taskId][\"total\"] - newState[action.taskId][\"completed\"] -  newState[action.taskId][\"deleted\"];\n        let currentCompleted;\n\n        //for total tasks added\n\n\n        while(currentTask != undefined) {\n          currentCompleted = newState[currentTask][\"completed\"];\n          currentTotal = newState[currentTask][\"total\"];\n          newState[currentTask] = {...newState[currentTask], \"completed\":(currentCompleted + toCompleteTaskCount)};\n          currentTask = reverseHiearchy[currentTask];\n        }\n        let tasksToComplete = [action.taskId];\n\n        while(tasksToComplete.length > 0) {\n          currentTask = tasksToComplete.pop();\n          currentCompleted = newState[currentTask][\"completed\"];\n          newState[currentTask] = {...newState[currentTask], \"completed\": currentCompleted + calculateActiveTasks(newState[currentTask])};\n          for(let child in state[\"hiearchy\"][currentTask]) {\n            tasksToComplete.push(child);\n          }\n        }\n\n        break;\n    case ActionType.DELETE_TASK:\n      newState = {...newState};\n\n\n      let toDeleteTaskCount = calculateActiveTasks(newState[action.taskId])\n      let currentDeleted;\n\n      //for total tasks added\n\n\n      while(currentTask != undefined) {\n        currentDeleted = newState[currentTask][\"deleted\"];\n        currentTotal = newState[currentTask][\"total\"];\n        newState[currentTask] = {...newState[currentTask], \"deleted\":(currentDeleted + toDeleteTaskCount)};\n        currentTask = reverseHiearchy[currentTask];\n      }\n      let tasksToDelete = [action.taskId];\n\n      //delete the task and all tasks that are a child of the task\n      while(tasksToDelete.length > 0) {\n        currentTask = tasksToDelete.pop();\n        currentDeleted = newState[currentTask][\"deleted\"];\n        newState[currentTask] = {...newState[currentTask], \"deleted\": currentDeleted + calculateActiveTasks(newState[currentTask])};\n        for(let child in state[\"hiearchy\"][currentTask]) {\n          tasksToDelete.push(child);\n        }\n      }\n      break;\n    case ActionType.CREATE_TASKS:\n      newState = {...newState};\n      for(let task of action.tasks) {\n        newState[task.id] =  createAggregate();\n      }\n      let totalTasksAdded = action.tasks.length;\n      let currentTotal;\n      while(currentTask != undefined) {\n        currentTotal = newState[currentTask][\"total\"];\n        newState[currentTask] = {...newState[currentTask], \"total\":(currentTotal + totalTasksAdded)};\n        currentTask = reverseHiearchy[currentTask];\n      }\n\n      break;\n    default:\n      break;\n  }\n  return newState;\n}\n","import {ActionType} from './../actions/tbos/action_type'\nimport {TaskState} from './../../global_constants'\nfunction calculateLeafTasks(agg) {\n  return agg[\"total\"];\n}\n\nfunction calculateCategoryVisionScore(category, state) {\n  let agg = state[\"taskAggregates\"][category];\n  let rootLevelTasks = Object.keys(state[\"hiearchy\"][category]);\n  let numRootTasks = rootLevelTasks.length;\n\n  let numTasks = calculateLeafTasks(agg);\n\n  let visionScore = (numTasks - numRootTasks)/numTasks;\n  return visionScore;\n}\n\n\nfunction calculateCategoryVisionScorev2(category, state) {\n  return state[\"taskAggregates\"][category][\"moved\"];\n}\n\nfunction calculateProductivityScore(category, state) {\n  let agg = state[\"taskAggregates\"][category];\n  if(agg[\"total\"] == agg[\"deleted\"])\n    return 0;\n\n  return agg[\"completed\"]/(agg[\"total\"] - agg[\"deleted\"]);\n}\n\n\nfunction makeDataPoint(category, state, stopBoolean, timestamp){\n  return {\"productivity\": calculateProductivityScore(category, state), \"vision\": calculateCategoryVisionScore(category, state), \"timestamp\":timestamp, \"stop\": stopBoolean}\n}\n\nfunction makeDataPointv2(category, state, stopBoolean, timestamp, name) {\n  return {\"productivity\": calculateProductivityScore(\"idroot\", state), \"vision\": calculateCategoryVisionScorev2(category, state), name, \"timestamp\":timestamp, \"stop\": stopBoolean}\n}\n\nfunction anyActiveTasks(state, currentTask) {\n  let totalRemaining = Object.keys(state[\"hiearchy\"][currentTask]);\n  totalRemaining = totalRemaining.filter(task => state[\"active\"][task] == TaskState.active);\n  totalRemaining = totalRemaining.length;\n  return (totalRemaining > 0);\n}\n\nexport default function tbosCookieTrail(state = {}, action) {\n\n  let newState = state[\"tbosCookieTrail\"];\n  let newMax = state[\"maxCookieVision\"];\n  let currentTask;\n  let timestamp = action.timestamp;\n  let arrA;\n  let arrB;\n  let total;\n  switch(action.type) {\n    case ActionType.CREATE_TASK_COLLISION:\n      newState = {...newState};\n      //create data point for new category\n      arrA = ((newState[action.taskA]==undefined)?[]:newState[action.taskA]);\n      arrB = ((newState[action.taskB]==undefined)?[]:newState[action.taskB]);\n      total = [...arrA, ...arrB];\n      total.sort((object)=>object.timestamp);\n      newState[action.taskId] = total;\n\n      break;\n    case ActionType.CATEGORIZE_TASK:\n      arrA = ((newState[action.parent]==undefined)?[]:newState[action.parent]);\n      arrB = ((newState[action.child]==undefined)?[]:newState[action.child]);\n      let total = [...arrA, ...arrB];\n      total.sort((object)=>object.timestamp);\n      newState[action.parent] = total;\n      break;\n    case ActionType.COMPLETE_TASK:\n      newState = {...newState};\n      let trailsToUpdate = [action.taskId];\n      let currentTrailToUpdate;\n      let activeChildren;\n      let newDataPoint;\n      while(trailsToUpdate.length > 0) {\n        currentTrailToUpdate = trailsToUpdate.pop();\n        activeChildren = false;\n        for(let child in state[\"hiearchy\"][currentTask]) {\n          if(state[\"active\"][child] == TaskState.active) {\n            trailsToUpdate.push(child);\n            activeChildren = true;\n          }\n        }\n        let name = state[\"name\"][action.taskId];\n        if(!activeChildren) {\n          newDataPoint = makeDataPointv2(currentTrailToUpdate,state, false, timestamp, name);\n          newMax = Math.max(state[\"maxCookieVision\"], newDataPoint[\"vision\"]);\n          currentTask = state[\"reverseHiearchy\"][currentTrailToUpdate];\n          while(currentTask != undefined) {\n            newState[currentTask] = [...newState[currentTask], newDataPoint];\n            currentTask = state[\"reverseHiearchy\"][currentTask];\n          }\n        }\n      }\n\n      break;\n    default:\n      break;\n  }\n\n  return {\"tbosCookieTrail\":newState, \"maxCookieVision\": newMax};\n}\n","import {ActionType} from './../actions/tbos/action_type';\n\nexport default function checkedCookieTrails(state= {}, action) {\n  let newState = state;\n  switch(action.type) {\n    case ActionType.TOGGLE_TRAIL:\n      newState = action.trail;\n    default:\n      break;\n  }\n  return newState;\n}\n","import {ActionType} from './../actions/tbos/action_type'\n\nexport default function position(state= {}, action) {\n  let newState = state;\n  switch(action.type) {\n    case ActionType.CREATE_TASKS:\n\n      newState = {...state};\n      for(let task of action.tasks) {\n        newState[task.id] =  {x: task.x, y: task.y};\n      }\n      break;\n    case ActionType.DRAG_TASK:\n      newState = {...state}\n      newState[action.taskId] = {x: action.x, y: action.y}\n      break;\n    default:\n      break;\n  }\n  return newState;\n}\n","import {ActionType} from './../actions/tbos/action_type'\n\nexport default function lastAction(state= {}, action) {\n  return action;\n}\n","import reverseHiearchy from './reverse_hiearchy'\nimport hiearchy from './hiearchy'\nimport active from './active'\nimport name from './name'\nimport tbosRootPath from './tbos_root_path'\nimport nameToTasks from './name_to_tasks'\nimport taskAggregates from './task_aggregates'\nimport tbosCookieTrail from './tbos_cookie_trail'\nimport checkedCookieTrails from './checked_cookie_trails'\nimport undoable, { distinctState , excludeAction, includeAction} from 'redux-undo'\nimport position from './position';\nimport {ActionType} from './../actions/tbos/action_type';\nimport base from './base';\nimport lastAction from './last_action';\n\nfunction tbosReducers(state = {}, action) {\n  if(action.type == ActionType.GET_TASKS) {\n    return base(state, action);\n  }\n  let intermediateResults = {\n    reverseHiearchy: reverseHiearchy(state.reverseHiearchy, action),\n    hiearchy: hiearchy(state.hiearchy, action),\n    active: active(state, action),\n    name: name(state.name, action),\n    tbosRootPath:tbosRootPath(state.tbosRootPath, action),\n    nameToTasks: nameToTasks(state.nameToTasks, action),\n    maxCookieVision: state[\"maxCookieVision\"],\n    position: position(state.position, action),\n    lastAction: lastAction(state.lastAction, action),\n    checkedCookieTrails: checkedCookieTrails(state.checkedCookieTrails, action)\n  }\n\n  intermediateResults[\"taskAggregates\"] = state[\"taskAggregates\"];\n  intermediateResults = Object.assign(intermediateResults, {taskAggregates: taskAggregates(intermediateResults, action)})\n  intermediateResults[\"tbosCookieTrail\"] = state[\"tbosCookieTrail\"];\n\n  intermediateResults = Object.assign(intermediateResults, tbosCookieTrail(intermediateResults, action))\n  return intermediateResults;\n}\n\nfunction reducers(state = {}, action) {\n\n  let firstResult = tbosReducers(state, action);\n\n  return firstResult;\n}\n\nexport default function undoableState(state = {}, action) {\n\n  return Object.assign(undoable(reducers, {\n        filter: includeAction([ActionType.CREATE_TASK_COLLISION, ActionType.DELETE_TASK,\n        ActionType.COMPLETE_TASK,\n        ActionType.CREATE_TASKS,\n        ActionType.CATEGORIZE_TASK,\n        ActionType.TBOS_POP_ROOT,\n        ActionType.TBOS_ADD_ROOT,\n        ActionType.DRAG_TASK,\n        ActionType.TBOS_POP_ROOT_UNTIL,\n        ActionType.UNDO]),\n        undoType: ActionType.UNDO,\n        ignoreInitialState: true\n      })(state, action), {\n        lastAction: action\n      })\n\n};\n","import {ActionType} from './../actions/tbos/action_type'\n\n export default function base (state = [], action) {\n   action.tasks[\"checkedCookieTrails\"] = [...action.tasks[\"checkedCookieTrails\"]];\n    switch (action.type) {\n\n     case ActionType.GET_TASKS:\n      return action.tasks\n     default:\n      return state\n     }\n}\n","\nexport function getUser() {\n  if(document.cookie == null)\n    return null;\n\n  let cookies = document.cookie.split(';');\n  let user = null;\n  for (let cookie of cookies) {\n    if(cookie.startsWith(\"userid\"))\n      return user = cookie.split(\"=\")[1];\n  }\n}\n","import {store} from './store';\nimport {getUser} from './../utils';\nimport {ActionType} from './../redux/actions/tbos/action_type'\nimport {db} from './config';\n\nfunction createDocFromStore(task, presentData, user) {\n  let newDocument={}\n  task = task.split(\"_\")[0];\n\n  for(let key in presentData) {\n    if(presentData[key][task] != undefined) {\n        newDocument[key] = presentData[key][task];\n    }\n  }\n  newDocument[\"u\"] = user; //TODO filler for actual userid\n\n  return newDocument;\n}\nfunction returnUnderscoreUserId() {\n  return \"_\" + getUser();\n}\n\nexport function syncer(store) {\n\n  store.subscribe(() => {\n    let user = getUser();\n    let data = store.getState().present;\n    let action = store.getState().lastAction;\n    let isUndo = false;\n\n    if (action.type == ActionType.UNDO) {\n      isUndo = true;\n\n      action = store.getState().future[0].lastAction;\n\n    }\n    let currentRoot = action.currentRoot;\n    if(currentRoot == \"idroot\") {\n      currentRoot += returnUnderscoreUserId();\n    }\n    let batcher = db.batch();\n    let tasksCollection = db.collection('tasks');\n    let usersCollection = db.collection('users');\n\n    let updateCurrentTaskStateActions = new Set([ActionType.COMPLETE_TASK, ActionType.DELETE_TASK, ActionType.CREATE_TASKS]);\n    let categorizeTaskActions = new Set([ActionType.CATEGORIZE_TASK]);\n    let dragTaskActions = new Set([ActionType.DRAG_TASK]);\n    let toggleTrailActions = new Set([ActionType.TOGGLE_TRAIL]);\n    let createCookie = new Set([ActionType.COMPLETE_TASK]);\n\n\n\n    if (createCookie.has(action.type)) {\n      batcher.update(usersCollection.doc(user), {\n        \"mCV\": data[\"maxCookieVision\"]\n      });\n    }\n\n\n\n    if (updateCurrentTaskStateActions.has(action.type)) {\n      let tasks = [{\"id\":action.taskId}]\n      if (tasks[0][\"id\"] == undefined) {\n        tasks = action.tasks;\n      }\n\n      for (let task of tasks) {\n        if (isUndo && action.type == ActionType.CREATE_TASKS) {\n          batcher.delete(tasksCollection.doc(task.id));\n        } else {\n          let newId = tasksCollection.doc()\n          batcher.set(tasksCollection.doc(task.id), createDocFromStore(task.id, data, user));\n        }\n      }\n\n      batcher.set(tasksCollection.doc(currentRoot), createDocFromStore(currentRoot, data, user));\n\n      let tempRoot = currentRoot;\n\n      while (data[\"reverseHiearchy\"][tempRoot] != null) {\n        tempRoot = data[\"reverseHiearchy\"][tempRoot];\n\n        if(tempRoot == \"idroot\") {\n          let suffixed = tempRoot +  returnUnderscoreUserId();\n          batcher.update(tasksCollection.doc(suffixed), {\n            \"taskAggregates\": data[\"taskAggregates\"][tempRoot],\n            \"tbosCookieTrail\": data[\"tbosCookieTrail\"][tempRoot]\n          })\n        } else {\n          batcher.update(tasksCollection.doc(tempRoot), {\n            \"taskAggregates\": data[\"taskAggregates\"][tempRoot],\n            \"tbosCookieTrail\": data[\"tbosCookieTrail\"][tempRoot]\n          })\n        }\n\n\n      }\n    }\n\n\n    if (categorizeTaskActions.has(action.type)) {\n      batcher.update(tasksCollection.doc(action.child), {\n        \"reverseHiearchy\": data[\"reverseHiearchy\"][action.child]\n      });\n      batcher.set(tasksCollection.doc(action.parent), createDocFromStore(action.parent, data, user));\n      batcher.set(tasksCollection.doc(currentRoot), createDocFromStore(currentRoot, data, user));\n    }\n\n    if (dragTaskActions.has(action.type)) {\n\n      batcher.update(tasksCollection.doc(action.taskId), {\n        \"position\": data[\"position\"][action.taskId]\n      });\n    }\n\n    if (toggleTrailActions.has(action.type)) {\n\n      batcher.update(usersCollection.doc(user), {\n        \"cT\": data[\"checkedCookieTrails\"]\n      }); //TODO: userid used as placeholder for actual user id\n    }\n    console.log(user);\n    batcher.commit().then(function() {\n      console.log(\"update succeeded\");\n    });\n\n  });\n}\n","import twisterLandReducers from './../redux/reducers';\nimport {TaskState} from './../global_constants';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'\nimport {db} from './config';\nimport {syncer} from './firestore_sync';\nimport {getTasks} from './../redux/actions/tbos/task';\nimport {getUser} from './../utils';\n\nlet data = { //TODO: each time a user is created this should be the starting schema\n  \"hiearchy\": {\n    \"idroot\": {\n    }\n  },\n  \"name\": {\n    \"idroot\": \"Your Main Trail\"\n  },\n  \"active\": {\n    \"idroot\": TaskState.active\n  },\n  \"reverseHiearchy\":{\n  },\n  \"tbosRootPath\": [\"idroot\"],\n  \"checkedCookieTrails\": [\"idroot\"],\n  \"nameToTasks\": {\n  },\n  \"position\": {\n  },\n  \"taskAggregates\": {\n    \"idroot\": {\n      \"completed\": 0,\n      \"deleted\": 0,\n      \"total\": 1,\n      \"moved\": 0\n    }\n  },\n  \"tbosCookieTrail\": {\n    \"idroot\": []\n  },\n  \"maxCookieVision\": 1,\n  \"lastAction\": {'type': 'NONE'}\n};\n\nlet tasks = db.collection('tasks');\n\nlet users = db.collection(\"users\");\nexport function getTasksThunk() {\n  return dispatch => {\n  let user = getUser();\n  if(user == null)\n    return;\n  tasks.where(\"u\", \"==\", user).get().then((coll) => { //TODO: userid used as filler for userid\n\n    coll.forEach((doc) => {\n\n      let docId = doc.id;\n      docId = docId.split('_')[0]\n      let docData = doc.data();\n      if(data[\"nameToTasks\"][docData[\"name\"]] == undefined) {\n          data[\"nameToTasks\"][docData[\"name\"]] = [docId];\n      } else {\n\n          data[\"nameToTasks\"][docData[\"name\"]].push(docId);\n      }\n      for(let key in docData) {\n        if(key != 'u')\n          data[key][docId] = docData[key];\n      }\n    })\n    users.doc(user).get().then((userDoc) => { //todo userid is filler\n        let userData = userDoc.data();\n        data = {...data};\n        data['checkedCookieTrails'] = [...userData['cT']];\n        data['maxCookieVision'] = userData['mCV'];\n\n\n    }).then(() => {\n\n        dispatch(getTasks(data));\n      })\n  })\n  }\n }\n\n\nvar store = createStore(twisterLandReducers, data, applyMiddleware(thunkMiddleware));\nsyncer(store);\nexport {store};\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport TwoBirdsOneStone from './two-birds-one-stone';\nimport CookieTrail from './cookie-trail';\nimport Login from './login';\nimport { BrowserRouter as Router, Route, Link,  Switch, NavLink } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport {store, getTasksThunk} from './firebase/store';\nimport registerServiceWorker from './registerServiceWorker';\nimport * as firebaseui from 'firebaseui';\nimport {getUser} from './utils';\nimport {uiConfig, auth} from './firebase/config';\nimport './styles/index.scss'\n//registry of all games - or different urls\nlet globalGameRegistry = {\n  \"two-birds-one-stone\":TwoBirdsOneStone,\n  \"cookie-trail\": CookieTrail\n}\n\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.games = Object.keys(globalGameRegistry);\n    }\n  render() {\n\n    let renderedGamesLinks = []\n    let routes = []\n    //create list of links to games and routes to games\n    for (let original of this.games) {\n\n      let simplified = \"/\" + original;\n      let link = (\n        <NavLink key={original} className=\"\" to={simplified}>\n          {original.split('-').join(' ')}\n        </NavLink>\n      );\n      let route = (<Route path={simplified} key={simplified}  component={globalGameRegistry[original]} />);\n\n      renderedGamesLinks.push(link);\n      routes.push(route);\n    }\n\n    //contains links and routes\n    let gameLinksContainer =  ()=> (  <div>\n        <ul>\n          {renderedGamesLinks}\n        </ul>\n        {routes}\n      </div>);\n    //contains just routes\n    let gamesContainer = ()=>(\n      <div>\n        {routes}\n      </div>\n    );\n\n    //for \"/\" show variable above with links for all other urls include only routes\n    return (\n      <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n\n          <div id=\"wrap\">\n            <div id=\"second-wrap\">\n            <nav>\n              {renderedGamesLinks}\n            </nav>\n\n            <div>\n\n              <Switch>\n                {routes}\n              </Switch>\n            </div>\n          </div>\n          </div>\n        </Router>\n      </Provider>\n\n    );\n  }\n\n  componentDidMount() {\n    var ui = new firebaseui.auth.AuthUI(auth);\n    let user = getUser();\n    if(user == null) {\n\n        ui.start('#wrap', uiConfig);\n\n    }\n      store.dispatch(getTasksThunk());\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}